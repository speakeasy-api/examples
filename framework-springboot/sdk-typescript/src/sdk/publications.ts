/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { publicationsCreatePublication } from "../funcs/publicationsCreatePublication.js";
import { publicationsGetPublication } from "../funcs/publicationsGetPublication.js";
import { publicationsListPublications } from "../funcs/publicationsListPublications.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Publications extends ClientSDK {
  /**
   * List all publications
   *
   * @remarks
   * Get a list of all publications in the store
   */
  async listPublications(
    options?: RequestOptions,
  ): Promise<Uint8Array> {
    return unwrapAsync(publicationsListPublications(
      this,
      options,
    ));
  }

  /**
   * Create a new publication
   *
   * @remarks
   * Add a new publication to the store
   */
  async createPublication(
    request: operations.CreatePublicationRequest,
    options?: RequestOptions,
  ): Promise<operations.CreatePublicationResponse> {
    return unwrapAsync(publicationsCreatePublication(
      this,
      request,
      options,
    ));
  }

  /**
   * Get a publication by ID
   *
   * @remarks
   * Retrieves a publication's details by its unique identifier
   */
  async getPublication(
    request: operations.GetPublicationRequest,
    options?: RequestOptions,
  ): Promise<operations.GetPublicationResponse> {
    return unwrapAsync(publicationsGetPublication(
      this,
      request,
      options,
    ));
  }
}
