/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { addPet } from "../funcs/addPet.js";
import { sendPetCreated } from "../funcs/sendPetCreated.js";
import { sendPetDeleted } from "../funcs/sendPetDeleted.js";
import { validateWebhook } from "../funcs/validateWebhook.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";
import { WebhookRecipient } from "../types/webhooks.js";

export class Petstore extends ClientSDK {
  async addPet(
    request: components.Pet,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(addPet(
      this,
      request,
      options,
    ));
  }

  async sendPetCreated(
    recipient: WebhookRecipient,
    request: components.PetCreated,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(sendPetCreated(
      this,
      recipient,
      request,
      options,
    ));
  }

  async sendPetDeleted(
    recipient: WebhookRecipient,
    request: components.PetDeleted,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(sendPetDeleted(
      this,
      recipient,
      request,
      options,
    ));
  }

  async validateWebhook({
    request,
  }: {
    request: {
      body: string;
      headers: Record<string, string> | Headers;
      url: string;
      method: string;
    } | Request;
  }): Promise<components.PetCreated | components.PetDeleted> {
    return unwrapAsync(validateWebhook(
      this,
      { request },
    ));
  }
}
