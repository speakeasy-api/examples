/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetTodoByIdRequest = {
  id: string;
};

/** @internal */
export const GetTodoByIdRequest$inboundSchema: z.ZodType<
  GetTodoByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetTodoByIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetTodoByIdRequest$outboundSchema: z.ZodType<
  GetTodoByIdRequest$Outbound,
  z.ZodTypeDef,
  GetTodoByIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetTodoByIdRequest$ {
  /** @deprecated use `GetTodoByIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetTodoByIdRequest$inboundSchema;
  /** @deprecated use `GetTodoByIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetTodoByIdRequest$outboundSchema;
  /** @deprecated use `GetTodoByIdRequest$Outbound` instead. */
  export type Outbound = GetTodoByIdRequest$Outbound;
}

export function getTodoByIdRequestToJSON(
  getTodoByIdRequest: GetTodoByIdRequest,
): string {
  return JSON.stringify(
    GetTodoByIdRequest$outboundSchema.parse(getTodoByIdRequest),
  );
}

export function getTodoByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetTodoByIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetTodoByIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetTodoByIdRequest' from JSON`,
  );
}
