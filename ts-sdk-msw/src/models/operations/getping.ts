/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetPingRequestBody = {
  message?: string | undefined;
};

/**
 * Ok
 */
export type GetPingResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const GetPingRequestBody$inboundSchema: z.ZodType<
  GetPingRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type GetPingRequestBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const GetPingRequestBody$outboundSchema: z.ZodType<
  GetPingRequestBody$Outbound,
  z.ZodTypeDef,
  GetPingRequestBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPingRequestBody$ {
  /** @deprecated use `GetPingRequestBody$inboundSchema` instead. */
  export const inboundSchema = GetPingRequestBody$inboundSchema;
  /** @deprecated use `GetPingRequestBody$outboundSchema` instead. */
  export const outboundSchema = GetPingRequestBody$outboundSchema;
  /** @deprecated use `GetPingRequestBody$Outbound` instead. */
  export type Outbound = GetPingRequestBody$Outbound;
}

export function getPingRequestBodyToJSON(
  getPingRequestBody: GetPingRequestBody,
): string {
  return JSON.stringify(
    GetPingRequestBody$outboundSchema.parse(getPingRequestBody),
  );
}

export function getPingRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetPingRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetPingRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetPingRequestBody' from JSON`,
  );
}

/** @internal */
export const GetPingResponseBody$inboundSchema: z.ZodType<
  GetPingResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type GetPingResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const GetPingResponseBody$outboundSchema: z.ZodType<
  GetPingResponseBody$Outbound,
  z.ZodTypeDef,
  GetPingResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPingResponseBody$ {
  /** @deprecated use `GetPingResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetPingResponseBody$inboundSchema;
  /** @deprecated use `GetPingResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetPingResponseBody$outboundSchema;
  /** @deprecated use `GetPingResponseBody$Outbound` instead. */
  export type Outbound = GetPingResponseBody$Outbound;
}

export function getPingResponseBodyToJSON(
  getPingResponseBody: GetPingResponseBody,
): string {
  return JSON.stringify(
    GetPingResponseBody$outboundSchema.parse(getPingResponseBody),
  );
}

export function getPingResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetPingResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetPingResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetPingResponseBody' from JSON`,
  );
}
