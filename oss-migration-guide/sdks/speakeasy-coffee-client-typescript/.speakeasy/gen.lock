lockVersion: 2.0.0
id: 0b747e6e-134e-43e9-bf8b-a26d6c1a43f2
management:
  docChecksum: 707abb4f274567bd52d627c21da4523a
  docVersion: 1.0.0
  speakeasyVersion: 1.509.1
  generationVersion: 2.539.1
  releaseVersion: 0.1.0
  configChecksum: 556a42e2fee9cff1009a6a956ee29eac
features:
  typescript:
    additionalDependencies: 0.1.0
    core: 3.21.3
    defaultEnabledRetries: 0.1.0
    devContainers: 2.90.0
    enumUnions: 0.1.0
    envVarSecurityUsage: 0.1.2
    examples: 2.81.5
    globalSecurity: 2.82.13
    globalSecurityCallbacks: 0.1.0
    globalSecurityFlattening: 0.1.0
    globalServerURLs: 2.82.4
    groups: 2.81.2
    mcpServer: 0.4.1
    mockServer: 0.1.0
    nameOverrides: 2.81.2
    nullables: 0.1.1
    responseFormat: 0.2.3
    retries: 2.83.0
    sdkHooks: 0.2.0
    tests: 0.15.0
    unions: 2.85.8
generatedFiles:
  - .devcontainer/README.md
  - .devcontainer/devcontainer.json
  - .devcontainer/setup.sh
  - .gitattributes
  - .npmignore
  - FUNCTIONS.md
  - RUNTIMES.md
  - USAGE.md
  - docs/lib/utils/retryconfig.md
  - docs/models/components/coffeeorder.md
  - docs/models/components/coffeeordersize.md
  - docs/models/components/coffeeorderupdate.md
  - docs/models/components/coffeeorderupdatesize.md
  - docs/models/components/coffeetype.md
  - docs/models/components/loc.md
  - docs/models/components/security.md
  - docs/models/components/validationerror.md
  - docs/models/errors/errorresponse.md
  - docs/models/errors/httpvalidationerror.md
  - docs/models/operations/deletecoffeetyperequest.md
  - docs/models/operations/deleteorderrequest.md
  - docs/models/operations/getcoffeetyperequest.md
  - docs/models/operations/getorderrequest.md
  - docs/models/operations/getordersrequest.md
  - docs/models/operations/updatecoffeetyperequest.md
  - docs/models/operations/updateorderrequest.md
  - docs/sdks/coffeetypes/README.md
  - docs/sdks/orders/README.md
  - docs/sdks/speakeasycoffeeclient/README.md
  - eslint.config.mjs
  - jsr.json
  - package.json
  - src/__tests__/assertions.ts
  - src/__tests__/coffeetypes.test.ts
  - src/__tests__/files.ts
  - src/__tests__/mockserver/Dockerfile
  - src/__tests__/mockserver/Makefile
  - src/__tests__/mockserver/README.md
  - src/__tests__/mockserver/go.mod
  - src/__tests__/mockserver/go.sum
  - src/__tests__/mockserver/internal/handler/assert/contenttype.go
  - src/__tests__/mockserver/internal/handler/assert/header.go
  - src/__tests__/mockserver/internal/handler/assert/parameter.go
  - src/__tests__/mockserver/internal/handler/assert/pointer.go
  - src/__tests__/mockserver/internal/handler/assert/security.go
  - src/__tests__/mockserver/internal/handler/doc.go
  - src/__tests__/mockserver/internal/handler/generated_handler.go
  - src/__tests__/mockserver/internal/handler/generated_handlers.go
  - src/__tests__/mockserver/internal/handler/pathdeletecoffeetypestypeid.go
  - src/__tests__/mockserver/internal/handler/pathdeleteordersorderid.go
  - src/__tests__/mockserver/internal/handler/pathgetcoffeetypes.go
  - src/__tests__/mockserver/internal/handler/pathgetcoffeetypestypeid.go
  - src/__tests__/mockserver/internal/handler/pathgetorders.go
  - src/__tests__/mockserver/internal/handler/pathgetordersorderid.go
  - src/__tests__/mockserver/internal/handler/pathpostcoffeetypes.go
  - src/__tests__/mockserver/internal/handler/pathpostorders.go
  - src/__tests__/mockserver/internal/handler/pathputcoffeetypestypeid.go
  - src/__tests__/mockserver/internal/handler/pathputordersorderid.go
  - src/__tests__/mockserver/internal/handler/values/files.go
  - src/__tests__/mockserver/internal/logging/doc.go
  - src/__tests__/mockserver/internal/logging/formats.go
  - src/__tests__/mockserver/internal/logging/http_file.go
  - src/__tests__/mockserver/internal/logging/http_logger.go
  - src/__tests__/mockserver/internal/logging/levels.go
  - src/__tests__/mockserver/internal/logging/logger.go
  - src/__tests__/mockserver/internal/logging/oas_operation.go
  - src/__tests__/mockserver/internal/logging/oas_operation_call.go
  - src/__tests__/mockserver/internal/sdk/models/components/coffeeorder.go
  - src/__tests__/mockserver/internal/sdk/models/components/coffeeorderupdate.go
  - src/__tests__/mockserver/internal/sdk/models/components/coffeetype.go
  - src/__tests__/mockserver/internal/sdk/models/components/httpmetadata.go
  - src/__tests__/mockserver/internal/sdk/models/components/security.go
  - src/__tests__/mockserver/internal/sdk/models/components/validationerror.go
  - src/__tests__/mockserver/internal/sdk/models/operations/createcoffeetype.go
  - src/__tests__/mockserver/internal/sdk/models/operations/createorder.go
  - src/__tests__/mockserver/internal/sdk/models/operations/deletecoffeetype.go
  - src/__tests__/mockserver/internal/sdk/models/operations/deleteorder.go
  - src/__tests__/mockserver/internal/sdk/models/operations/getcoffeetype.go
  - src/__tests__/mockserver/internal/sdk/models/operations/getcoffeetypes.go
  - src/__tests__/mockserver/internal/sdk/models/operations/getorder.go
  - src/__tests__/mockserver/internal/sdk/models/operations/getorders.go
  - src/__tests__/mockserver/internal/sdk/models/operations/updatecoffeetype.go
  - src/__tests__/mockserver/internal/sdk/models/operations/updateorder.go
  - src/__tests__/mockserver/internal/sdk/models/sdkerrors/errorresponse.go
  - src/__tests__/mockserver/internal/sdk/models/sdkerrors/httpvalidationerror.go
  - src/__tests__/mockserver/internal/sdk/types/bigint.go
  - src/__tests__/mockserver/internal/sdk/types/date.go
  - src/__tests__/mockserver/internal/sdk/types/datetime.go
  - src/__tests__/mockserver/internal/sdk/types/decimal.go
  - src/__tests__/mockserver/internal/sdk/types/pointers.go
  - src/__tests__/mockserver/internal/sdk/utils/json.go
  - src/__tests__/mockserver/internal/sdk/utils/reflect.go
  - src/__tests__/mockserver/internal/sdk/utils/sort.go
  - src/__tests__/mockserver/internal/server/doc.go
  - src/__tests__/mockserver/internal/server/generated_handlers.go
  - src/__tests__/mockserver/internal/server/internal_handlers.go
  - src/__tests__/mockserver/internal/server/server.go
  - src/__tests__/mockserver/internal/server/server_option.go
  - src/__tests__/mockserver/internal/server/templates/log/index.html.tmpl
  - src/__tests__/mockserver/internal/server/templates/log/operation.html.tmpl
  - src/__tests__/mockserver/internal/server/templates/log/style.css.tmpl
  - src/__tests__/mockserver/internal/tracking/requesttracker.go
  - src/__tests__/mockserver/main.go
  - src/__tests__/orders.test.ts
  - src/__tests__/testclient.ts
  - src/core.ts
  - src/funcs/coffeeTypesCreate.ts
  - src/funcs/coffeeTypesDelete.ts
  - src/funcs/coffeeTypesGetById.ts
  - src/funcs/coffeeTypesList.ts
  - src/funcs/coffeeTypesUpdate.ts
  - src/funcs/ordersCreate.ts
  - src/funcs/ordersDelete.ts
  - src/funcs/ordersGetById.ts
  - src/funcs/ordersList.ts
  - src/funcs/ordersUpdate.ts
  - src/hooks/hooks.ts
  - src/hooks/index.ts
  - src/hooks/types.ts
  - src/index.ts
  - src/lib/base64.ts
  - src/lib/config.ts
  - src/lib/dlv.ts
  - src/lib/encodings.ts
  - src/lib/env.ts
  - src/lib/files.ts
  - src/lib/http.ts
  - src/lib/is-plain-object.ts
  - src/lib/logger.ts
  - src/lib/matchers.ts
  - src/lib/primitives.ts
  - src/lib/retries.ts
  - src/lib/schemas.ts
  - src/lib/sdks.ts
  - src/lib/security.ts
  - src/lib/url.ts
  - src/mcp-server/build.mts
  - src/mcp-server/cli.ts
  - src/mcp-server/cli/start/command.ts
  - src/mcp-server/cli/start/impl.ts
  - src/mcp-server/console-logger.ts
  - src/mcp-server/mcp-server.ts
  - src/mcp-server/resources.ts
  - src/mcp-server/scopes.ts
  - src/mcp-server/server.ts
  - src/mcp-server/shared.ts
  - src/mcp-server/tools.ts
  - src/mcp-server/tools/coffeeTypesCreate.ts
  - src/mcp-server/tools/coffeeTypesDelete.ts
  - src/mcp-server/tools/coffeeTypesGetById.ts
  - src/mcp-server/tools/coffeeTypesList.ts
  - src/mcp-server/tools/coffeeTypesUpdate.ts
  - src/mcp-server/tools/ordersCreate.ts
  - src/mcp-server/tools/ordersDelete.ts
  - src/mcp-server/tools/ordersGetById.ts
  - src/mcp-server/tools/ordersList.ts
  - src/mcp-server/tools/ordersUpdate.ts
  - src/models/components/coffeeorder.ts
  - src/models/components/coffeeorderupdate.ts
  - src/models/components/coffeetype.ts
  - src/models/components/index.ts
  - src/models/components/security.ts
  - src/models/components/validationerror.ts
  - src/models/errors/apierror.ts
  - src/models/errors/errorresponse.ts
  - src/models/errors/httpclienterrors.ts
  - src/models/errors/httpvalidationerror.ts
  - src/models/errors/index.ts
  - src/models/errors/sdkvalidationerror.ts
  - src/models/operations/deletecoffeetype.ts
  - src/models/operations/deleteorder.ts
  - src/models/operations/getcoffeetype.ts
  - src/models/operations/getorder.ts
  - src/models/operations/getorders.ts
  - src/models/operations/index.ts
  - src/models/operations/updatecoffeetype.ts
  - src/models/operations/updateorder.ts
  - src/sdk/coffeetypes.ts
  - src/sdk/index.ts
  - src/sdk/orders.ts
  - src/sdk/sdk.ts
  - src/types/async.ts
  - src/types/blobs.ts
  - src/types/constdatetime.ts
  - src/types/enums.ts
  - src/types/fp.ts
  - src/types/index.ts
  - src/types/operations.ts
  - src/types/rfcdate.ts
  - src/types/streams.ts
  - tsconfig.json
examples:
  GetOrders:
    latte:
      parameters:
        query:
          coffee_type: "Latte"
      responses:
        "200":
          application/json: [{"id": 5, "customer_name": "Eve", "coffee_type": "Mocha", "size": "Large", "extras": ["Whipped cream", "Chocolate syrup"], "price": 6}, {"id": 6, "customer_name": "Grace", "coffee_type": "Cold Brew", "size": "Medium", "extras": ["Vanilla syrup"], "price": 5.5}]
        "422":
          application/json: {"detail": [{"type": "value_error", "loc": ["body", "coffee_type"], "msg": "Invalid coffee type specified"}]}
    espresso:
      parameters:
        query:
          coffee_type: "Espresso"
      responses:
        "200":
          application/json: [{"id": 5, "customer_name": "Eve", "coffee_type": "Mocha", "size": "Large", "extras": ["Whipped cream", "Chocolate syrup"], "price": 6}, {"id": 6, "customer_name": "Grace", "coffee_type": "Cold Brew", "size": "Medium", "extras": ["Vanilla syrup"], "price": 5.5}]
        "422":
          application/json: {"detail": [{"type": "value_error", "loc": ["body", "coffee_type"], "msg": "Invalid coffee type specified"}]}
    multiple_orders:
      responses:
        "200":
          application/json: [{"id": 1, "customer_name": "Alice", "coffee_type": "Latte", "size": "Medium", "extras": ["Extra shot", "Soy milk"], "price": 4.5}, {"id": 2, "customer_name": "Bob", "coffee_type": "Espresso", "size": "Small", "extras": ["Extra shot"], "price": 3.5}]
  CreateOrder:
    simple_order:
      requestBody:
        application/json: {"id": 3, "customer_name": "Charlie", "coffee_type": "Americano", "size": "Large", "price": 3.75}
      responses:
        "201":
          application/json: {"id": 5, "customer_name": "Eve", "coffee_type": "Mocha", "size": "Large", "extras": ["Whipped cream", "Chocolate syrup"], "price": 6}
        "400":
          application/json: {"detail": [{"type": "value_error", "loc": ["body", "coffee_type"], "msg": "Invalid coffee type specified"}]}
    complex_order:
      requestBody:
        application/json: {"id": 4, "customer_name": "Diana", "coffee_type": "Cappuccino", "size": "Medium", "extras": ["Whipped cream", "Caramel syrup"], "price": 5.25}
      responses:
        "201":
          application/json: {"id": 6, "customer_name": "Grace", "coffee_type": "Cold Brew", "size": "Medium", "extras": ["Vanilla syrup"], "price": 5.5}
        "400":
          application/json: {"detail": [{"type": "value_error", "loc": ["body", "coffee_type"], "msg": "Invalid coffee type specified"}]}
  GetOrder:
    order1:
      parameters:
        path:
          order_id: 1
      responses:
        "200":
          application/json: {"id": 5, "customer_name": "Eve", "coffee_type": "Mocha", "size": "Large", "extras": ["Whipped cream", "Chocolate syrup"], "price": 6}
        "404":
          application/json: {"detail": "<value>"}
        "422":
          application/json: {"detail": [{"type": "value_error", "loc": ["body", "coffee_type"], "msg": "Invalid coffee type specified"}]}
    order2:
      parameters:
        path:
          order_id: 2
      responses:
        "200":
          application/json: {"id": 6, "customer_name": "Grace", "coffee_type": "Cold Brew", "size": "Medium", "extras": ["Vanilla syrup"], "price": 5.5}
        "404":
          application/json: {"detail": "<value>"}
        "422":
          application/json: {"detail": [{"type": "value_error", "loc": ["body", "coffee_type"], "msg": "Invalid coffee type specified"}]}
    not_found:
      parameters:
        path:
          order_id: 257133
      responses:
        "404":
          application/json: {"detail": "Order not found"}
  UpdateOrder:
    order1:
      parameters:
        path:
          order_id: 1
      requestBody:
        application/json: {"coffee_type": "Cappuccino", "extras": ["Cinnamon", "Whipped cream"], "price": 5.75}
      responses:
        "200":
          application/json: {"id": 6, "customer_name": "Grace", "coffee_type": "Cold Brew", "size": "Medium", "extras": ["Vanilla syrup"], "price": 5.5}
        "404":
          application/json: {"detail": "<value>"}
        "422":
          application/json: {"detail": [{"type": "value_error", "loc": ["body", "coffee_type"], "msg": "Invalid coffee type specified"}]}
    order2:
      parameters:
        path:
          order_id: 2
      requestBody:
        application/json: {"customer_name": "Frank", "size": "Small", "extras": ["Sugar-free syrup"]}
      responses:
        "200":
          application/json: {"id": 6, "customer_name": "Grace", "coffee_type": "Cold Brew", "size": "Medium", "extras": ["Vanilla syrup"], "price": 5.5}
        "404":
          application/json: {"detail": "<value>"}
        "422":
          application/json: {"detail": [{"type": "value_error", "loc": ["body", "coffee_type"], "msg": "Invalid coffee type specified"}]}
    not_found:
      parameters:
        path:
          order_id: 488852
      requestBody:
        application/json: {"coffee_type": "Cappuccino", "extras": ["Cinnamon", "Whipped cream"], "price": 5.75}
      responses:
        "404":
          application/json: {"detail": "Order not found"}
  DeleteOrder:
    order1:
      parameters:
        path:
          order_id: 1
      responses:
        "404":
          application/json: {"detail": "<value>"}
        "422":
          application/json: {"detail": [{"type": "value_error", "loc": ["body", "coffee_type"], "msg": "Invalid coffee type specified"}]}
    order2:
      parameters:
        path:
          order_id: 2
      responses:
        "404":
          application/json: {"detail": "<value>"}
        "422":
          application/json: {"detail": [{"type": "value_error", "loc": ["body", "coffee_type"], "msg": "Invalid coffee type specified"}]}
    not_found:
      parameters:
        path:
          order_id: 545907
      responses:
        "404":
          application/json: {"detail": "Order not found"}
  GetCoffeeTypes:
    coffee_types:
      responses:
        "200":
          application/json: [{"name": "Espresso", "description": "Strong and bold coffee shot", "id": 1, "price_multiplier": 1}, {"name": "Latte", "description": "Espresso with steamed milk", "id": 2, "price_multiplier": 1.2}, {"name": "Mocha", "description": "Espresso with chocolate and steamed milk", "id": 3, "price_multiplier": 1.3}]
  CreateCoffeeType:
    duplicate_id:
      requestBody:
        application/json: {"name": "Cold Brew", "description": "Smooth, cold-steeped coffee", "id": 4, "price_multiplier": 1.4}
      responses:
        "400":
          application/json: {"detail": "Coffee type with this ID already exists"}
  GetCoffeeType:
    espresso:
      parameters:
        path:
          type_id: 1
      responses:
        "200":
          application/json: {"name": "Cold Brew", "description": "Smooth, cold-steeped coffee", "id": 4, "price_multiplier": 1.4}
        "404":
          application/json: {"detail": "<value>"}
        "422":
          application/json: {"detail": [{"type": "value_error", "loc": ["body", "coffee_type"], "msg": "Invalid coffee type specified"}]}
    latte:
      parameters:
        path:
          type_id: 2
      responses:
        "200":
          application/json: {"name": "Flat White", "description": "Espresso with steamed whole milk", "id": 5, "price_multiplier": 1.25}
        "404":
          application/json: {"detail": "<value>"}
        "422":
          application/json: {"detail": [{"type": "value_error", "loc": ["body", "coffee_type"], "msg": "Invalid coffee type specified"}]}
    not_found:
      parameters:
        path:
          type_id: 257133
      responses:
        "404":
          application/json: {"detail": "Coffee type not found"}
  UpdateCoffeeType:
    espresso:
      parameters:
        path:
          type_id: 1
      requestBody:
        application/json: {"name": "Flat White", "description": "Espresso with steamed whole milk", "id": 5, "price_multiplier": 1.25}
      responses:
        "200":
          application/json: {"name": "Flat White", "description": "Espresso with steamed whole milk", "id": 5, "price_multiplier": 1.25}
        "404":
          application/json: {"detail": "<value>"}
        "422":
          application/json: {"detail": [{"type": "value_error", "loc": ["body", "coffee_type"], "msg": "Invalid coffee type specified"}]}
    latte:
      parameters:
        path:
          type_id: 2
      requestBody:
        application/json: {"name": "Cold Brew", "description": "Smooth, cold-steeped coffee", "id": 4, "price_multiplier": 1.4}
      responses:
        "200":
          application/json: {"name": "Flat White", "description": "Espresso with steamed whole milk", "id": 5, "price_multiplier": 1.25}
        "404":
          application/json: {"detail": "<value>"}
        "422":
          application/json: {"detail": [{"type": "value_error", "loc": ["body", "coffee_type"], "msg": "Invalid coffee type specified"}]}
    not_found:
      parameters:
        path:
          type_id: 488852
      requestBody:
        application/json: {"name": "Flat White", "description": "Espresso with steamed whole milk", "id": 5, "price_multiplier": 1.25}
      responses:
        "404":
          application/json: {"detail": "Coffee type not found"}
  DeleteCoffeeType:
    espresso:
      parameters:
        path:
          type_id: 1
      responses:
        "404":
          application/json: {"detail": "<value>"}
        "422":
          application/json: {"detail": [{"type": "value_error", "loc": ["body", "coffee_type"], "msg": "Invalid coffee type specified"}]}
    latte:
      parameters:
        path:
          type_id: 2
      responses:
        "404":
          application/json: {"detail": "<value>"}
        "422":
          application/json: {"detail": [{"type": "value_error", "loc": ["body", "coffee_type"], "msg": "Invalid coffee type specified"}]}
    not_found:
      parameters:
        path:
          type_id: 545907
      responses:
        "404":
          application/json: {"detail": "Coffee type not found"}
examplesVersion: 1.0.0
generatedTests:
  GetOrders: "2025-03-05T00:06:49+02:00"
  CreateOrder: "2025-03-05T00:06:49+02:00"
  GetOrder: "2025-03-05T00:06:49+02:00"
  UpdateOrder: "2025-03-05T00:06:49+02:00"
  DeleteOrder: "2025-03-05T00:06:49+02:00"
  GetCoffeeTypes: "2025-03-05T00:06:49+02:00"
  CreateCoffeeType: "2025-03-05T00:06:49+02:00"
  GetCoffeeType: "2025-03-05T00:06:49+02:00"
  UpdateCoffeeType: "2025-03-05T00:06:49+02:00"
  DeleteCoffeeType: "2025-03-05T00:06:49+02:00"
