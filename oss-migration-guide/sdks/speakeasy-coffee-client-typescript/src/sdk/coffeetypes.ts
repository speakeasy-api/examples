/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { coffeeTypesCreate } from "../funcs/coffeeTypesCreate.js";
import { coffeeTypesDelete } from "../funcs/coffeeTypesDelete.js";
import { coffeeTypesGetById } from "../funcs/coffeeTypesGetById.js";
import { coffeeTypesList } from "../funcs/coffeeTypesList.js";
import { coffeeTypesUpdate } from "../funcs/coffeeTypesUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class CoffeeTypes extends ClientSDK {
  /**
   * Get Coffee Types
   *
   * @remarks
   * Retrieve all available coffee types.
   */
  async list(
    options?: RequestOptions,
  ): Promise<Array<components.CoffeeType>> {
    return unwrapAsync(coffeeTypesList(
      this,
      options,
    ));
  }

  /**
   * Create Coffee Type
   *
   * @remarks
   * Create a new coffee type.
   */
  async create(
    request: components.CoffeeType,
    options?: RequestOptions,
  ): Promise<components.CoffeeType> {
    return unwrapAsync(coffeeTypesCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Coffee Type
   *
   * @remarks
   * Retrieve a specific coffee type by its ID.
   */
  async getById(
    request: operations.GetCoffeeTypeRequest,
    options?: RequestOptions,
  ): Promise<components.CoffeeType> {
    return unwrapAsync(coffeeTypesGetById(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Coffee Type
   *
   * @remarks
   * Update an existing coffee type.
   */
  async update(
    request: operations.UpdateCoffeeTypeRequest,
    options?: RequestOptions,
  ): Promise<components.CoffeeType> {
    return unwrapAsync(coffeeTypesUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete Coffee Type
   *
   * @remarks
   * Delete a coffee type.
   */
  async delete(
    request: operations.DeleteCoffeeTypeRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(coffeeTypesDelete(
      this,
      request,
      options,
    ));
  }
}
