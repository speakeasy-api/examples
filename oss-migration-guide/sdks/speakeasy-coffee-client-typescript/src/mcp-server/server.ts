/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";
import { SpeakeasyCoffeeClientCore } from "../core.js";
import { SDKOptions } from "../lib/config.js";
import type { ConsoleLogger } from "./console-logger.js";
import { MCPScope, mcpScopes } from "./scopes.js";
import { createRegisterTool } from "./tools.js";
import { tool$coffeeTypesCreate } from "./tools/coffeeTypesCreate.js";
import { tool$coffeeTypesDelete } from "./tools/coffeeTypesDelete.js";
import { tool$coffeeTypesGetById } from "./tools/coffeeTypesGetById.js";
import { tool$coffeeTypesList } from "./tools/coffeeTypesList.js";
import { tool$coffeeTypesUpdate } from "./tools/coffeeTypesUpdate.js";
import { tool$ordersCreate } from "./tools/ordersCreate.js";
import { tool$ordersDelete } from "./tools/ordersDelete.js";
import { tool$ordersGetById } from "./tools/ordersGetById.js";
import { tool$ordersList } from "./tools/ordersList.js";
import { tool$ordersUpdate } from "./tools/ordersUpdate.js";

export function createMCPServer(deps: {
  logger: ConsoleLogger;
  allowedTools?: string[] | undefined;
  scopes?: MCPScope[] | undefined;
  serverURL?: string | undefined;
  apiKeyAuth?: SDKOptions["apiKeyAuth"] | undefined;
  serverIdx?: SDKOptions["serverIdx"] | undefined;
}) {
  const server = new McpServer({
    name: "SpeakeasyCoffeeClient",
    version: "0.1.0",
  });

  const client = new SpeakeasyCoffeeClientCore({
    apiKeyAuth: deps.apiKeyAuth,
    serverURL: deps.serverURL,
    serverIdx: deps.serverIdx,
  });
  const scopes = new Set(deps.scopes ?? mcpScopes);
  const allowedTools = deps.allowedTools && new Set(deps.allowedTools);
  const tool = createRegisterTool(
    deps.logger,
    server,
    client,
    scopes,
    allowedTools,
  );

  tool(tool$ordersList);
  tool(tool$ordersCreate);
  tool(tool$ordersGetById);
  tool(tool$ordersUpdate);
  tool(tool$ordersDelete);
  tool(tool$coffeeTypesList);
  tool(tool$coffeeTypesCreate);
  tool(tool$coffeeTypesGetById);
  tool(tool$coffeeTypesUpdate);
  tool(tool$coffeeTypesDelete);

  return server;
}
