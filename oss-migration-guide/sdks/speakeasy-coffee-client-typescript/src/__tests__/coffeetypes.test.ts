/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { SpeakeasyCoffeeClient } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Coffeetypes Get Coffee Types Coffee Types", async () => {
  const testHttpClient = createTestHTTPClient("GetCoffeeTypes-coffee_types");

  const speakeasyCoffeeClient = new SpeakeasyCoffeeClient({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiKeyAuth: "your-api-key-here",
  });

  const result = await speakeasyCoffeeClient.coffeeTypes.list();
  expect(result).toBeDefined();
  expect(result).toEqual([
    {
      name: "Espresso",
      description: "Strong and bold coffee shot",
      id: 1,
      priceMultiplier: 1,
    },
    {
      name: "Latte",
      description: "Espresso with steamed milk",
      id: 2,
      priceMultiplier: 1.2,
    },
    {
      name: "Mocha",
      description: "Espresso with chocolate and steamed milk",
      id: 3,
      priceMultiplier: 1.3,
    },
  ]);
});

test("Coffeetypes Create Coffee Type Duplicate Id", async () => {
  const testHttpClient = createTestHTTPClient("CreateCoffeeType-duplicate_id");

  const speakeasyCoffeeClient = new SpeakeasyCoffeeClient({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiKeyAuth: "your-api-key-here",
  });

  const result = await speakeasyCoffeeClient.coffeeTypes.create({
    name: "Cold Brew",
    description: "Smooth, cold-steeped coffee",
    id: 4,
    priceMultiplier: 1.4,
  });
  expect(result).toBeDefined();
});

test("Coffeetypes Get Coffee Type Espresso", async () => {
  const testHttpClient = createTestHTTPClient("GetCoffeeType-espresso");

  const speakeasyCoffeeClient = new SpeakeasyCoffeeClient({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiKeyAuth: "your-api-key-here",
  });

  const result = await speakeasyCoffeeClient.coffeeTypes.getById({
    typeId: 1,
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    name: "Cold Brew",
    description: "Smooth, cold-steeped coffee",
    id: 4,
    priceMultiplier: 1.4,
  });
});

test("Coffeetypes Get Coffee Type Latte", async () => {
  const testHttpClient = createTestHTTPClient("GetCoffeeType-latte");

  const speakeasyCoffeeClient = new SpeakeasyCoffeeClient({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiKeyAuth: "your-api-key-here",
  });

  const result = await speakeasyCoffeeClient.coffeeTypes.getById({
    typeId: 2,
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    name: "Flat White",
    description: "Espresso with steamed whole milk",
    id: 5,
    priceMultiplier: 1.25,
  });
});

test("Coffeetypes Get Coffee Type Not Found", async () => {
  const testHttpClient = createTestHTTPClient("GetCoffeeType-not_found");

  const speakeasyCoffeeClient = new SpeakeasyCoffeeClient({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiKeyAuth: "your-api-key-here",
  });

  const result = await speakeasyCoffeeClient.coffeeTypes.getById({
    typeId: 257133,
  });
  expect(result).toBeDefined();
});

test("Coffeetypes Update Coffee Type Espresso", async () => {
  const testHttpClient = createTestHTTPClient("UpdateCoffeeType-espresso");

  const speakeasyCoffeeClient = new SpeakeasyCoffeeClient({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiKeyAuth: "your-api-key-here",
  });

  const result = await speakeasyCoffeeClient.coffeeTypes.update({
    typeId: 1,
    coffeeType: {
      name: "Flat White",
      description: "Espresso with steamed whole milk",
      id: 5,
      priceMultiplier: 1.25,
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    name: "Flat White",
    description: "Espresso with steamed whole milk",
    id: 5,
    priceMultiplier: 1.25,
  });
});

test("Coffeetypes Update Coffee Type Latte", async () => {
  const testHttpClient = createTestHTTPClient("UpdateCoffeeType-latte");

  const speakeasyCoffeeClient = new SpeakeasyCoffeeClient({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiKeyAuth: "your-api-key-here",
  });

  const result = await speakeasyCoffeeClient.coffeeTypes.update({
    typeId: 2,
    coffeeType: {
      name: "Cold Brew",
      description: "Smooth, cold-steeped coffee",
      id: 4,
      priceMultiplier: 1.4,
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    name: "Flat White",
    description: "Espresso with steamed whole milk",
    id: 5,
    priceMultiplier: 1.25,
  });
});

test("Coffeetypes Update Coffee Type Not Found", async () => {
  const testHttpClient = createTestHTTPClient("UpdateCoffeeType-not_found");

  const speakeasyCoffeeClient = new SpeakeasyCoffeeClient({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiKeyAuth: "your-api-key-here",
  });

  const result = await speakeasyCoffeeClient.coffeeTypes.update({
    typeId: 488852,
    coffeeType: {
      name: "Flat White",
      description: "Espresso with steamed whole milk",
      id: 5,
      priceMultiplier: 1.25,
    },
  });
  expect(result).toBeDefined();
});

test("Coffeetypes Delete Coffee Type Espresso", async () => {
  const testHttpClient = createTestHTTPClient("DeleteCoffeeType-espresso");

  const speakeasyCoffeeClient = new SpeakeasyCoffeeClient({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiKeyAuth: "your-api-key-here",
  });

  await speakeasyCoffeeClient.coffeeTypes.delete({
    typeId: 1,
  });
});

test("Coffeetypes Delete Coffee Type Latte", async () => {
  const testHttpClient = createTestHTTPClient("DeleteCoffeeType-latte");

  const speakeasyCoffeeClient = new SpeakeasyCoffeeClient({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiKeyAuth: "your-api-key-here",
  });

  await speakeasyCoffeeClient.coffeeTypes.delete({
    typeId: 2,
  });
});

test("Coffeetypes Delete Coffee Type Not Found", async () => {
  const testHttpClient = createTestHTTPClient("DeleteCoffeeType-not_found");

  const speakeasyCoffeeClient = new SpeakeasyCoffeeClient({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiKeyAuth: "your-api-key-here",
  });

  await speakeasyCoffeeClient.coffeeTypes.delete({
    typeId: 545907,
  });
});
