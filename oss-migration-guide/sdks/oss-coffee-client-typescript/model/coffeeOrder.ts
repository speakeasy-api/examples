/**
 * Coffee Orders API
 * A CRUD API for managing coffee orders and available coffee types.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Represents a coffee order in the system
*/
export class CoffeeOrder {
    /**
    * Unique identifier for the order
    */
    'id': number;
    /**
    * Name of the customer placing the order
    */
    'customerName': string;
    /**
    * Type of coffee ordered (must match an existing coffee type)
    */
    'coffeeType': string;
    /**
    * Size of the coffee order
    */
    'size': CoffeeOrder.SizeEnum;
    'extras'?: Array<string> | null;
    /**
    * Total price of the order
    */
    'price': number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "customerName",
            "baseName": "customer_name",
            "type": "string"
        },
        {
            "name": "coffeeType",
            "baseName": "coffee_type",
            "type": "string"
        },
        {
            "name": "size",
            "baseName": "size",
            "type": "CoffeeOrder.SizeEnum"
        },
        {
            "name": "extras",
            "baseName": "extras",
            "type": "Array<string>"
        },
        {
            "name": "price",
            "baseName": "price",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return CoffeeOrder.attributeTypeMap;
    }
}

export namespace CoffeeOrder {
    export enum SizeEnum {
        Small = <any> 'Small',
        Medium = <any> 'Medium',
        Large = <any> 'Large'
    }
}
